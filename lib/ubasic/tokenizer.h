/**
 * Copyright (c) 2006, Adam Dunkels
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */
#ifndef __TOKENIZER_H__
#define __TOKENIZER_H__

typedef enum {
  TOKENIZER_ERROR,
  TOKENIZER_ENDOFINPUT,
  TOKENIZER_NUMBER,
  TOKENIZER_STRING,
  TOKENIZER_VARIABLE,
  TOKENIZER_LET,
  TOKENIZER_PRINT_SCREEN,
  TOKENIZER_PRNT,
  TOKENIZER_IF,
  TOKENIZER_THEN,
// 10
  TOKENIZER_ELSE,
  TOKENIZER_ENDIF,
  TOKENIZER_FOR,
  TOKENIZER_TO,
  TOKENIZER_NEXT,
  TOKENIZER_STEP,
  TOKENIZER_GOTO,
  TOKENIZER_DO,
  TOKENIZER_UNTIL,
  TOKENIZER_WHILE,
// 20
  TOKENIZER_WEND,
  TOKENIZER_GOSUB,
  TOKENIZER_RETURN,
  TOKENIZER_REM,
  TOKENIZER_END,
  TOKENIZER_CLS,
  TOKENIZER_COMMA,
  TOKENIZER_SEMICOLON,
  TOKENIZER_PLUS,
  TOKENIZER_MINUS,
// 30
  TOKENIZER_AND,
  TOKENIZER_OR,
  TOKENIZER_XOR,
  TOKENIZER_ASTR,
  TOKENIZER_SLASH,
  TOKENIZER_MOD,
  TOKENIZER_LEFTPAREN,
  TOKENIZER_RIGHTPAREN,
  TOKENIZER_LT,
  TOKENIZER_PERIOD,
// 40
  TOKENIZER_GT,
  TOKENIZER_EQ,
  TOKENIZER_NE,
  TOKENIZER_LE,
  TOKENIZER_GE,
  TOKENIZER_LNOT,
  TOKENIZER_LAND,
  TOKENIZER_LOR,
  TOKENIZER_CR,
  TOKENIZER_LABEL,
 // 50 
  TOKENIZER_SLEEP,
  TOKENIZER_CLICK,
  TOKENIZER_PRESS,
  TOKENIZER_RELEASE,
  TOKENIZER_SHOOT,
  TOKENIZER_SET_TV96_DIRECT,
  TOKENIZER_SET_TV,
  TOKENIZER_SET_AV,
  TOKENIZER_SET_FOCUS,
  TOKENIZER_GET_DAY_SECONDS,
  // 60  
  TOKENIZER_GET_TICK_COUNT,
  TOKENIZER_SET_ZOOM,
  TOKENIZER_SET_ZOOM_REL,
  TOKENIZER_SET_ISO,
  TOKENIZER_GET_PROP,
  TOKENIZER_SET_PROP,
  TOKENIZER_WAIT_CLICK,
  TOKENIZER_IS_KEY,
  TOKENIZER_MD_DETECT_MOTION,
   // 70 
  TOKENIZER_MD_GET_CELL_DIFF,
  TOKENIZER_MEM_DUMP,
  TOKENIZER_SET_RAW,
  TOKENIZER_GET_SHOOTING,
  TOKENIZER_BLUE_OFF,
  TOKENIZER_BLUE_ON,
  TOKENIZER_WHEEL_RIGHT,
  TOKENIZER_WHEEL_LEFT,
  TOKENIZER_SCRIPT_AUTOSTART,
  TOKENIZER_SET_SCRIPT_AUTOSTART,
  // 80 
  TOKENIZER_GET_USB_POWER,
  TOKENIZER_EXIT_ALT, 
  TOKENIZER_SET_ND_FILTER,
  TOKENIZER_GET_FLASH_MODE,
  TOKENIZER_GET_VIDEO_BUTTON,
  // 90
  TOKENIZER_GET_MODE,
  TOKENIZER_PLAY_SOUND, 
  TOKENIZER_BEEP, 
  TOKENIZER_GET_RESOLUTION,   
  TOKENIZER_GET_QUALITY, 
  TOKENIZER_SET_RESOLUTION, 
  TOKENIZER_SET_QUALITY,
  TOKENIZER_GET_ZOOM,
  TOKENIZER_GET_ZOOM_STEPS,
  TOKENIZER_MOVIE, // not used
  // 100
  TOKENIZER_RECORD,
  TOKENIZER_PLAYBACK,
  TOKENIZER_SHOOT_MOVIE,
  TOKENIZER_SLEEP_M,
  TOKENIZER_SLEEP_S,
  TOKENIZER_SET_MAX_SPT,
  // 110
  TOKENIZER_SHUT_DOWN,
  TOKENIZER_BRACKETING, // not used
  TOKENIZER_SET_BE,
  TOKENIZER_SET_FS,
  TOKENIZER_SS,
  TOKENIZER_GET_FR, // not used
  TOKENIZER_AFB,
  // 120
  TOKENIZER_SSB,
  TOKENIZER_BL,
  TOKENIZER_BD,
  TOKENIZER_BA,
  TOKENIZER_WUD,
  TOKENIZER_WFSP,
  TOKENIZER_TL,
  // 130
  TOKENIZER_USBD, // not used
  TOKENIZER_LA,
  TOKENIZER_UF,
  TOKENIZER_SET_AFLOCK,
  TOKENIZER_SDMCN,
  TOKENIZER_SDMCF,
  TOKENIZER_SDMCL,
  // 140
  TOKENIZER_SDMCLL,
  TOKENIZER_SLEEP_UNTIL,
  TOKENIZER_FT,
  TOKENIZER_SYNC_ON,
  TOKENIZER_SYNC_OFF,
  TOKENIZER_SD,
  TOKENIZER_DR,
  TOKENIZER_UP,
  TOKENIZER_GET_FREE_DISK_SPACE,
  TOKENIZER_AFLF,
  // 150
  TOKENIZER_AFLO,
  TOKENIZER_AFLOFF,
  TOKENIZER_MSS,  // not used
  TOKENIZER_NDFO,
  TOKENIZER_NDFI,
  TOKENIZER_NDFF,
  TOKENIZER_GET_FOCUS,
  TOKENIZER_CAMPOS,
  TOKENIZER_UB,
  TOKENIZER_GET_LUMINANCE,
  // 160
  TOKENIZER_SWS,
  TOKENIZER_SWNM,
  TOKENIZER_SSPD,
  TOKENIZER_AP,
  TOKENIZER_LINE_ONE,
  TOKENIZER_LINE_TWO,
  TOKENIZER_LINE_THREE,
  TOKENIZER_CEV,
  TOKENIZER_TUP,
  // 170
  TOKENIZER_UAFL,
  TOKENIZER_UPL,
  TOKENIZER_SET_LED,
  TOKENIZER_GET_FOV,
  TOKENIZER_SAVE_FOCUS,
  TOKENIZER_SAVE_ZOOM,
  // 180
  TOKENIZER_RESTORE_FOCUS,
  TOKENIZER_RESTORE_ZOOM,
  TOKENIZER_AF_FIRST,
  TOKENIZER_AF_ALL,
  TOKENIZER_SV,
  TOKENIZER_STPV,
  TOKENIZER_SET_USER_TV_BY_ID_REL,
  TOKENIZER_SET_AV_REL,
  TOKENIZER_DISPLAY_NORMAL,
  TOKENIZER_DISPLAY_INVERTED,
  // 190
  TOKENIZER_DISPLAY_ROTATED_LEFT,
  TOKENIZER_DISPLAY_ROTATED_RIGHT,
  TOKENIZER_CONSOLE_REDRAW,
  TOKENIZER_LFA,
  TOKENIZER_FSON,
  TOKENIZER_FAST_ISO_MAX,
  TOKENIZER_COVER_LENS,
  TOKENIZER_MB,
  TOKENIZER_FLASH_OFF,
  // 200
  TOKENIZER_FLASH_ON,
  TOKENIZER_IMAGE_NUMBER,
  TOKENIZER_LOG,
  TOKENIZER_ENABLE_LOGGING,
  TOKENIZER_START_CLOCK,
  TOKENIZER_DISABLE_VIDEO_OUT,
  TOKENIZER_ENABLE_VIDEO_OUT,
  TOKENIZER_IS_CAPTURE_MODE_VALID,
  TOKENIZER_CAPTURE_MODE,
  // 210
  TOKENIZER_REMOVE,
  TOKENIZER_GET_CONFIG_VALUE,
  TOKENIZER_SET_CONFIG_VALUE,
  TOKENIZER_GET_TV96,
  TOKENIZER_SET_SV96,
  TOKENIZER_MF, // not used
  TOKENIZER_CS,
  TOKENIZER_FOCUS_MODE,
  TOKENIZER_FOCUS_OUT,
 
  TOKENIZER_FOCUS_IN,
  TOKENIZER_CS_OFF,
  TOKENIZER_FOCUS_AT_NP,
  TOKENIZER_MF_OFF,
  TOKENIZER_MF_ON,
  TOKENIZER_SET_FOCUS_RANGE,
  TOKENIZER_LFAI,
  TOKENIZER_AF,
  TOKENIZER_CFPS,
  TOKENIZER_IS_PRESSED,
  TOKENIZER_LOG_BV,
 // TOKENIZER_FASTMAXISO,
  TOKENIZER_COMMENT_BLOCK,
  TOKENIZER_GET_HOURS,
  TOKENIZER_GET_MINUTES,
  TOKENIZER_GET_SECONDS,
  TOKENIZER_COLON,
  TOKENIZER_VZOOM_IN_OUT,
  TOKENIZER_ENABLE_BIG_ZOOM,
  TOKENIZER_DISABLE_BIG_ZOOM,
  TOKENIZER_EH,
  TOKENIZER_SH,
  TOKENIZER_GET_BRIGHTNESS,
  TOKENIZER_GET_REAL_ISO,
  TOKENIZER_GET_MOVIE_STATUS,
  TOKENIZER_SM,
  TOKENIZER_GET_SHOOTING_MODE,
  TOKENIZER_TLPF,
  TOKENIZER_TLPO,
  TOKENIZER_LG,
  TOKENIZER_EFO,
  TOKENIZER_DFO,
  TOKENIZER_CONSOLE_POSITION,
  TOKENIZER_SMIN,
  TOKENIZER_EM,
  TOKENIZER_GET_LENS_MECHA_POSITION,
  TOKENIZER_AE_LOCK,
  TOKENIZER_AE_UNLOCK,
  TOKENIZER_GET_EXP_COUNT,
  TOKENIZER_SET_HDR_TV96,
  TOKENIZER_GET_OVTV96,
  TOKENIZER_CAM_TV_MODE,
  TOKENIZER_BURSTSEQ,
  TOKENIZER_SDMBM,
  TOKENIZER_SDM2D,
  TOKENIZER_SDM3D,
  TOKENIZER_SDM3DSPORTS,
  TOKENIZER_SDMAUTOHDR,
  TOKENIZER_SDMTM,
  TOKENIZER_SET_REMOTE_TIMING,
  TOKENIZER_GET_DRIVE_MODE,
  TOKENIZER_WARNING,
  TOKENIZER_SDMDM,
  TOKENIZER_CAM_HAS_ND,
  TOKENIZER_SDM_RESET,
  TOKENIZER_PFSAT,
  TOKENIZER_LINE,
  TOKENIZER_SCROLL,
  TOKENIZER_SET_ZOOM_FL,
  TOKENIZER_GET_EFL,
  TOKENIZER_GET_FL,
  TOKENIZER_CAM_AV_MODE,
  TOKENIZER_SET_ZOOM_RFL,
  TOKENIZER_GET_RFL_FOR_STEP,
  TOKENIZER_GET_NEARPOINT,
  TOKENIZER_GET_FARPOINT,
  TOKENIZER_SHOT_COUNT,
  TOKENIZER_GET_AV96,
  TOKENIZER_GET_MIN_AV96,
  TOKENIZER_GET_SV96,
  TOKENIZER_SET_AV96_DIRECT,
  TOKENIZER_SMS,
  TOKENIZER_GET_BV96,
  TOKENIZER_IS_ON,
  TOKENIZER_IS_OFF,
  TOKENIZER_TIME_DELAY_ACTIVE,
  TOKENIZER_AEB_OFF,
  TOKENIZER_AEB_ON,
  TOKENIZER_GET_EV_CORRECTION,
  TOKENIZER_GET_ORIENTATION,
  TOKENIZER_IS_CAF_ON,
  TOKENIZER_IS_SAF_ON,
  TOKENIZER_SET_AF_ASSIST,
  TOKENIZER_USBPA,
  TOKENIZER_IS_USB_HIGH,
  TOKENIZER_GET_ISO,
  TOKENIZER_SDMUHDR,
  TOKENIZER_AFA_OFF,
  TOKENIZER_SYNC_TICKS,
  TOKENIZER_PSUSBAT,
  TOKENIZER_PSUSBOFF,
  TOKENIZER_SCJR_STATE,
  TOKENIZER_DISABLE_LOGGING,
  TOKENIZER_ISHOTS,
  TOKENIZER_GET_SHOOT_FAST_PARAM,
  TOKENIZER_SET_SHOOT_FAST_PARAM,
  TOKENIZER_BZDP,
  TOKENIZER_CT,
#if defined(OPT_ALARIK)
  TOKENIZER_SELECT,
  TOKENIZER_CASE_ELSE,
  TOKENIZER_CASE,
  TOKENIZER_END_SELECT,
  TOKENIZER_SET_USER_AV_BY_ID,
  TOKENIZER_SET_USER_TV_BY_ID,
  TOKENIZER_SET_CONSOLE_LAYOUT,
  TOKENIZER_SET_CONSOLE_AUTOREDRAW,
#endif
  TOKENIZER_ELAPSED_TIME,    // ************ STRING ADDITIONS ONLY HERE ********
  TOKENIZER_DATE,
  TOKENIZER_TIME,
  TOKENIZER_VALID_MODES,
  TOKENIZER_PRINT_TV,
  TOKENIZER_PRINT_AV,
  TOKENIZER_EV_CORRECTION,
  TOKENIZER_MESSAGE,
  TOKENIZER_ALTITUDE,
  TOKENIZER_BIGZOOM
  // 240
} ubasic_token;

void tokenizer_init(const char *program);
void tokenizer_next(void);
int tokenizer_token(void);
int tokenizer_num(void);
int tokenizer_variable_num(void);
void tokenizer_string(char *dest, int len);
void tokenizer_label(char *dest, int len);
int tokenizer_stringlookahead(void);
int tokenizer_line_number(void);

int tokenizer_finished(void);
void tokenizer_error_print(void);

#endif /*__TOKENIZER_H__ */
